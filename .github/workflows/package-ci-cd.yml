name: Package CI/CD

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ enh/* ]  # For testing purposes and main branch

jobs:
  style-test:
    name: Style Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Setup environment with uv
        run: |
          uv venv .venv-dev
          source .venv-dev/bin/activate
          uv pip install -e ".[formatter]"

      - name: Run isort
        run: uv run isort --check --diff .

      - name: Run black
        run: uv run black --check --diff .

      - name: Run flake8
        run: uv run flake8 .

  test:
    name: Unit and Functional Tests
    runs-on: ubuntu-latest
    needs: style-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install package in dev mode
        run: |
          uv venv .venv-dev
          source .venv-dev/bin/activate        
          uv pip install -r pyproject.toml
          uv pip install -e .
          # uv pip install pytest

      - name: Run pytest
        run: pytest tests/unit_tests/
        # The workflow will fail automatically if pytest returns non-zero exit code

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Setup environment with uv
        run: |
          uv pip install .
          uv pip install build

      - name: Install tree CLI tool
        run: sudo apt-get install -y tree

      - name: Display directory tree before build
        run: tree -a -I '.git'

      - name: Build package
        run: |
          python -m build

      - name: Display directory tree after build
        run: tree -a -I '.git'

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: package-build
          path: |
            dist/
            pyproject.toml
          retention-days: 7

  install:
    name: Install and Test Package
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: package-build
          path: artifacts

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies from pyproject.toml
        run: |
          # If needed for dependencies, but might not be necessary
          # as the wheel should include dependencies
          uv pip install -e artifacts

      - name: Install package
        run: |
          ls -la artifacts/dist/
          uv pip install artifacts/dist/*.whl  # Install wheel package

      - name: Run workflow scripts
        run: |
          echo "Running ingest_data at $(date '+%Y-%m-%d %H:%M:%S')"
          uv run scripts/ingest_data_script.py

          echo "Running training at $(date '+%Y-%m-%d %H:%M:%S')"
          uv run scripts/train_script.py
          
          echo "Running scorer at $(date '+%Y-%m-%d %H:%M:%S')"
          uv run scripts/score_script.py
          
